//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProRadiRS.ProRadiRSService2 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserMst2", Namespace="http://schemas.datacontract.org/2004/07/ProRadiRSService2")]
    [System.SerializableAttribute()]
    public partial class UserMst2 : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserCDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserCD {
            get {
                return this.UserCDField;
            }
            set {
                if ((this.UserCDField.Equals(value) != true)) {
                    this.UserCDField = value;
                    this.RaisePropertyChanged("UserCD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="ProRadiRSService2.IProRadiRSService2")]
    public interface IProRadiRSService2 {
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IProRadiRSService2/AutoLoginCheck", ReplyAction="urn:IProRadiRSService2/AutoLoginCheckResponse")]
        ProRadiRS.ProRadiRSService2.AutoLoginCheckResponse AutoLoginCheck(ProRadiRS.ProRadiRSService2.AutoLoginCheckRequest request);
        
        // CODEGEN: 操作に複数の戻り値があるため、メッセージ コントラクトを生成しています。
        [System.ServiceModel.OperationContractAttribute(Action="urn:IProRadiRSService2/AutoLoginCheck", ReplyAction="urn:IProRadiRSService2/AutoLoginCheckResponse")]
        System.Threading.Tasks.Task<ProRadiRS.ProRadiRSService2.AutoLoginCheckResponse> AutoLoginCheckAsync(ProRadiRS.ProRadiRSService2.AutoLoginCheckRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IProRadiRSService2/GetSentenceData", ReplyAction="urn:IProRadiRSService2/GetSentenceDataResponse")]
        ProRadiRS.ProRadiRSService2.GetSentenceDataResponse GetSentenceData(ProRadiRS.ProRadiRSService2.GetSentenceDataRequest request);
        
        // CODEGEN: 操作に複数の戻り値があるため、メッセージ コントラクトを生成しています。
        [System.ServiceModel.OperationContractAttribute(Action="urn:IProRadiRSService2/GetSentenceData", ReplyAction="urn:IProRadiRSService2/GetSentenceDataResponse")]
        System.Threading.Tasks.Task<ProRadiRS.ProRadiRSService2.GetSentenceDataResponse> GetSentenceDataAsync(ProRadiRS.ProRadiRSService2.GetSentenceDataRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IProRadiRSService2/GetChangeHistory", ReplyAction="urn:IProRadiRSService2/GetChangeHistoryResponse")]
        ProRadiRS.ProRadiRSService2.GetChangeHistoryResponse GetChangeHistory(ProRadiRS.ProRadiRSService2.GetChangeHistoryRequest request);
        
        // CODEGEN: 操作に複数の戻り値があるため、メッセージ コントラクトを生成しています。
        [System.ServiceModel.OperationContractAttribute(Action="urn:IProRadiRSService2/GetChangeHistory", ReplyAction="urn:IProRadiRSService2/GetChangeHistoryResponse")]
        System.Threading.Tasks.Task<ProRadiRS.ProRadiRSService2.GetChangeHistoryResponse> GetChangeHistoryAsync(ProRadiRS.ProRadiRSService2.GetChangeHistoryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IProRadiRSService2/SaveReport", ReplyAction="urn:IProRadiRSService2/SaveReportResponse")]
        bool SaveReport(int userCd, int serialNo, string finding, string diagnosing, int imgCnt);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IProRadiRSService2/SaveReport", ReplyAction="urn:IProRadiRSService2/SaveReportResponse")]
        System.Threading.Tasks.Task<bool> SaveReportAsync(int userCd, int serialNo, string finding, string diagnosing, int imgCnt);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IProRadiRSService2/SaveReportImage", ReplyAction="urn:IProRadiRSService2/SaveReportImageResponse")]
        bool SaveReportImage(string serialNo, string[] images);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IProRadiRSService2/SaveReportImage", ReplyAction="urn:IProRadiRSService2/SaveReportImageResponse")]
        System.Threading.Tasks.Task<bool> SaveReportImageAsync(string serialNo, string[] images);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IProRadiRSService2/UpdateSentence", ReplyAction="urn:IProRadiRSService2/UpdateSentenceResponse")]
        bool UpdateSentence(string scd, string name, string val1, string val2, string pcd, string usercd);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IProRadiRSService2/UpdateSentence", ReplyAction="urn:IProRadiRSService2/UpdateSentenceResponse")]
        System.Threading.Tasks.Task<bool> UpdateSentenceAsync(string scd, string name, string val1, string val2, string pcd, string usercd);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IProRadiRSService2/GetImageExt", ReplyAction="urn:IProRadiRSService2/GetImageExtResponse")]
        string[] GetImageExt(int userCd, string serialNo, string imagePath);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IProRadiRSService2/GetImageExt", ReplyAction="urn:IProRadiRSService2/GetImageExtResponse")]
        System.Threading.Tasks.Task<string[]> GetImageExtAsync(int userCd, string serialNo, string imagePath);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IProRadiRSService2/DeleteSentence", ReplyAction="urn:IProRadiRSService2/DeleteSentenceResponse")]
        bool DeleteSentence(string scd);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IProRadiRSService2/DeleteSentence", ReplyAction="urn:IProRadiRSService2/DeleteSentenceResponse")]
        System.Threading.Tasks.Task<bool> DeleteSentenceAsync(string scd);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IProRadiRSService2/GetUserList", ReplyAction="urn:IProRadiRSService2/GetUserListResponse")]
        ProRadiRS.ProRadiRSService2.UserMst2[] GetUserList();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IProRadiRSService2/GetUserList", ReplyAction="urn:IProRadiRSService2/GetUserListResponse")]
        System.Threading.Tasks.Task<ProRadiRS.ProRadiRSService2.UserMst2[]> GetUserListAsync();
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AutoLoginCheck", WrapperNamespace="", IsWrapped=true)]
    public partial class AutoLoginCheckRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string UserCD;
        
        public AutoLoginCheckRequest() {
        }
        
        public AutoLoginCheckRequest(string UserCD) {
            this.UserCD = UserCD;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AutoLoginCheckResponse", WrapperNamespace="", IsWrapped=true)]
    public partial class AutoLoginCheckResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public bool AutoLoginCheckResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string[][] userinfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public string retErrMsg;
        
        public AutoLoginCheckResponse() {
        }
        
        public AutoLoginCheckResponse(bool AutoLoginCheckResult, string[][] userinfo, string retErrMsg) {
            this.AutoLoginCheckResult = AutoLoginCheckResult;
            this.userinfo = userinfo;
            this.retErrMsg = retErrMsg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSentenceData", WrapperNamespace="", IsWrapped=true)]
    public partial class GetSentenceDataRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public int userCD;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public int userGroupCD;
        
        public GetSentenceDataRequest() {
        }
        
        public GetSentenceDataRequest(int userCD, int userGroupCD) {
            this.userCD = userCD;
            this.userGroupCD = userGroupCD;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSentenceDataResponse", WrapperNamespace="", IsWrapped=true)]
    public partial class GetSentenceDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public bool GetSentenceDataResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string[][] SentenceList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public string retErrMsg;
        
        public GetSentenceDataResponse() {
        }
        
        public GetSentenceDataResponse(bool GetSentenceDataResult, string[][] SentenceList, string retErrMsg) {
            this.GetSentenceDataResult = GetSentenceDataResult;
            this.SentenceList = SentenceList;
            this.retErrMsg = retErrMsg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetChangeHistory", WrapperNamespace="", IsWrapped=true)]
    public partial class GetChangeHistoryRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public int userCD;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public int SerialNo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public string imagePath;
        
        public GetChangeHistoryRequest() {
        }
        
        public GetChangeHistoryRequest(int userCD, int SerialNo, string imagePath) {
            this.userCD = userCD;
            this.SerialNo = SerialNo;
            this.imagePath = imagePath;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetChangeHistoryResponse", WrapperNamespace="", IsWrapped=true)]
    public partial class GetChangeHistoryResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public bool GetChangeHistoryResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string[][] HistoryDataList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public string[][] ImageDataList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=3)]
        public string retErrMsg;
        
        public GetChangeHistoryResponse() {
        }
        
        public GetChangeHistoryResponse(bool GetChangeHistoryResult, string[][] HistoryDataList, string[][] ImageDataList, string retErrMsg) {
            this.GetChangeHistoryResult = GetChangeHistoryResult;
            this.HistoryDataList = HistoryDataList;
            this.ImageDataList = ImageDataList;
            this.retErrMsg = retErrMsg;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProRadiRSService2Channel : ProRadiRS.ProRadiRSService2.IProRadiRSService2, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProRadiRSService2Client : System.ServiceModel.ClientBase<ProRadiRS.ProRadiRSService2.IProRadiRSService2>, ProRadiRS.ProRadiRSService2.IProRadiRSService2 {
        
        public ProRadiRSService2Client() {
        }
        
        public ProRadiRSService2Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProRadiRSService2Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProRadiRSService2Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProRadiRSService2Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ProRadiRS.ProRadiRSService2.AutoLoginCheckResponse ProRadiRS.ProRadiRSService2.IProRadiRSService2.AutoLoginCheck(ProRadiRS.ProRadiRSService2.AutoLoginCheckRequest request) {
            return base.Channel.AutoLoginCheck(request);
        }
        
        public bool AutoLoginCheck(string UserCD, out string[][] userinfo, out string retErrMsg) {
            ProRadiRS.ProRadiRSService2.AutoLoginCheckRequest inValue = new ProRadiRS.ProRadiRSService2.AutoLoginCheckRequest();
            inValue.UserCD = UserCD;
            ProRadiRS.ProRadiRSService2.AutoLoginCheckResponse retVal = ((ProRadiRS.ProRadiRSService2.IProRadiRSService2)(this)).AutoLoginCheck(inValue);
            userinfo = retVal.userinfo;
            retErrMsg = retVal.retErrMsg;
            return retVal.AutoLoginCheckResult;
        }
        
        public System.Threading.Tasks.Task<ProRadiRS.ProRadiRSService2.AutoLoginCheckResponse> AutoLoginCheckAsync(ProRadiRS.ProRadiRSService2.AutoLoginCheckRequest request) {
            return base.Channel.AutoLoginCheckAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ProRadiRS.ProRadiRSService2.GetSentenceDataResponse ProRadiRS.ProRadiRSService2.IProRadiRSService2.GetSentenceData(ProRadiRS.ProRadiRSService2.GetSentenceDataRequest request) {
            return base.Channel.GetSentenceData(request);
        }
        
        public bool GetSentenceData(int userCD, int userGroupCD, out string[][] SentenceList, out string retErrMsg) {
            ProRadiRS.ProRadiRSService2.GetSentenceDataRequest inValue = new ProRadiRS.ProRadiRSService2.GetSentenceDataRequest();
            inValue.userCD = userCD;
            inValue.userGroupCD = userGroupCD;
            ProRadiRS.ProRadiRSService2.GetSentenceDataResponse retVal = ((ProRadiRS.ProRadiRSService2.IProRadiRSService2)(this)).GetSentenceData(inValue);
            SentenceList = retVal.SentenceList;
            retErrMsg = retVal.retErrMsg;
            return retVal.GetSentenceDataResult;
        }
        
        public System.Threading.Tasks.Task<ProRadiRS.ProRadiRSService2.GetSentenceDataResponse> GetSentenceDataAsync(ProRadiRS.ProRadiRSService2.GetSentenceDataRequest request) {
            return base.Channel.GetSentenceDataAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ProRadiRS.ProRadiRSService2.GetChangeHistoryResponse ProRadiRS.ProRadiRSService2.IProRadiRSService2.GetChangeHistory(ProRadiRS.ProRadiRSService2.GetChangeHistoryRequest request) {
            return base.Channel.GetChangeHistory(request);
        }
        
        public bool GetChangeHistory(int userCD, int SerialNo, string imagePath, out string[][] HistoryDataList, out string[][] ImageDataList, out string retErrMsg) {
            ProRadiRS.ProRadiRSService2.GetChangeHistoryRequest inValue = new ProRadiRS.ProRadiRSService2.GetChangeHistoryRequest();
            inValue.userCD = userCD;
            inValue.SerialNo = SerialNo;
            inValue.imagePath = imagePath;
            ProRadiRS.ProRadiRSService2.GetChangeHistoryResponse retVal = ((ProRadiRS.ProRadiRSService2.IProRadiRSService2)(this)).GetChangeHistory(inValue);
            HistoryDataList = retVal.HistoryDataList;
            ImageDataList = retVal.ImageDataList;
            retErrMsg = retVal.retErrMsg;
            return retVal.GetChangeHistoryResult;
        }
        
        public System.Threading.Tasks.Task<ProRadiRS.ProRadiRSService2.GetChangeHistoryResponse> GetChangeHistoryAsync(ProRadiRS.ProRadiRSService2.GetChangeHistoryRequest request) {
            return base.Channel.GetChangeHistoryAsync(request);
        }
        
        public bool SaveReport(int userCd, int serialNo, string finding, string diagnosing, int imgCnt) {
            return base.Channel.SaveReport(userCd, serialNo, finding, diagnosing, imgCnt);
        }
        
        public System.Threading.Tasks.Task<bool> SaveReportAsync(int userCd, int serialNo, string finding, string diagnosing, int imgCnt) {
            return base.Channel.SaveReportAsync(userCd, serialNo, finding, diagnosing, imgCnt);
        }
        
        public bool SaveReportImage(string serialNo, string[] images) {
            return base.Channel.SaveReportImage(serialNo, images);
        }
        
        public System.Threading.Tasks.Task<bool> SaveReportImageAsync(string serialNo, string[] images) {
            return base.Channel.SaveReportImageAsync(serialNo, images);
        }
        
        public bool UpdateSentence(string scd, string name, string val1, string val2, string pcd, string usercd) {
            return base.Channel.UpdateSentence(scd, name, val1, val2, pcd, usercd);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateSentenceAsync(string scd, string name, string val1, string val2, string pcd, string usercd) {
            return base.Channel.UpdateSentenceAsync(scd, name, val1, val2, pcd, usercd);
        }
        
        public string[] GetImageExt(int userCd, string serialNo, string imagePath) {
            return base.Channel.GetImageExt(userCd, serialNo, imagePath);
        }
        
        public System.Threading.Tasks.Task<string[]> GetImageExtAsync(int userCd, string serialNo, string imagePath) {
            return base.Channel.GetImageExtAsync(userCd, serialNo, imagePath);
        }
        
        public bool DeleteSentence(string scd) {
            return base.Channel.DeleteSentence(scd);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteSentenceAsync(string scd) {
            return base.Channel.DeleteSentenceAsync(scd);
        }
        
        public ProRadiRS.ProRadiRSService2.UserMst2[] GetUserList() {
            return base.Channel.GetUserList();
        }
        
        public System.Threading.Tasks.Task<ProRadiRS.ProRadiRSService2.UserMst2[]> GetUserListAsync() {
            return base.Channel.GetUserListAsync();
        }
    }
}
